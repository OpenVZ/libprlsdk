<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XML Spy v4.3 U (http://www.xmlspy.com) by Max (Parallels) -->
<!-- edited with XMLSpy v2011 rel. 2 sp1 (http://www.altova.com) by van (qqq) -->
<!-- edited with XMLSPY v5 rel. 4 U (http://www.xmlspy.com) by rth77 (rth77) -->
<!--W3C Schema generated by XMLSPY v5 rel. 4 U (http://www.xmlspy.com)-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xs:complexType name="AccessPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispUserAccess;</xs:documentation>
			<xs:documentation source="canUseServerManagementConsole">header_fragment:
    bool canUseServerManagementConsole() const
    {
        return m_bUseManagementConsole;
    }</xs:documentation>
			<xs:documentation source="canChangeServerSettings">header_fragment:
    bool canChangeServerSettings() const
    {
        return m_bChangeServerSettings;
    }</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UseManagementConsole" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>method=UseServerManagementConsoleFlag;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChangeServerSettings" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>method=ChangeServerSettingsFlag;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LocalAdministrator" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>no_save=on</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AllowUseServerManagementConsole" type="xs:boolean"/>
	<xs:complexType name="CommonPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispCommonPreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="WorkspacePreferences" type="WorkspacePreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProxyPreferences" type="ProxyPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IPhonePreferences" type="IPhonePreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RemoteDisplayPreferences" type="RemoteDisplayPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MemoryPreferences" type="MemoryPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CpuPreferences" type="CpuPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PciPreferences" type="PciPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UsbPreferences" type="UsbPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NetworkPreferences">
				<xs:annotation>
					<xs:documentation>class=CDispNetworkPreferences;single_fixed=on;</xs:documentation>
					<xs:documentation source="NetAdapter">header_fragment:
	// Get network adapters list
	QList&lt;CDispNetAdapter* &gt;* getNetAdapters()  { return &amp;m_lstNetAdapters; }
	// Add network adapter to the list
	void addNetAdapter(CDispNetAdapter* );
    // Remove network adapter from list
    void removeNetAdapter(CDispNetAdapter* );
	// Get a network adapter by its name
	CDispNetAdapter* getAdapterByName( const QString&amp; )  const;
	// Get a network adapter by its index
	CDispNetAdapter* getAdapterByIndex( int )  const;
	// Check if an adapter exists with the name.
	bool doesAdapterNameExist( const QString&amp; )  const;
</xs:documentation>
					<xs:documentation source="NetAdapter_impl">unit_fragment:
void CDispNetworkPreferences::addNetAdapter( CDispNetAdapter* pAdapter )
{
	m_lstNetAdapters.append( pAdapter );
}

void CDispNetworkPreferences::removeNetAdapter( CDispNetAdapter* pAdapter )
{
   m_lstNetAdapters.removeAll( pAdapter );
   delete pAdapter;
}

CDispNetAdapter* CDispNetworkPreferences::getAdapterByName(
	const QString&amp; qsName )  const
{
	for ( int i = 0; i &lt; m_lstNetAdapters.count(); i++ )
	{
		CDispNetAdapter* pAdapter = m_lstNetAdapters.at( i );
		if ( pAdapter-&gt;getName() == qsName )
			return pAdapter;
	}
	return NULL;
}

CDispNetAdapter* CDispNetworkPreferences::getAdapterByIndex( int nIndex ) const
{
	nIndex &amp;= 0xfffffff;
	for ( int i = 0; i &lt; m_lstNetAdapters.count(); i++ )
	{
		CDispNetAdapter* pAdapter = m_lstNetAdapters.at( i );
		if ( pAdapter-&gt;getIndex() == nIndex )
			return pAdapter;
	}
	return NULL;
}

bool CDispNetworkPreferences::doesAdapterNameExist( const QString&amp; qsName ) const
{
	for ( int i = 0; i &lt; m_lstNetAdapters.count(); i++ )
	{
		CDispNetAdapter* pAdapter = m_lstNetAdapters.at( i );
		if ( pAdapter-&gt;getName() == qsName )
			return true;
	}
	return false;
}
</xs:documentation>
					<xs:documentation source="Tag condition">condition:(m_lstNetworkPreferences.size()>0 &amp;&amp; ! m_lstNetworkPreferences[0]->getNoSaveFlag() )</xs:documentation>
					<xs:documentation source="Save Flag">header_fragment:
private:
    bool m_bNoSave;

public:
    bool getNoSaveFlag() { return m_bNoSave; }
    void setNoSaveFlag(bool bNoSave) { m_bNoSave = bNoSave; }
    virtual void CustomInit() { m_bNoSave = false; }

    virtual void CustomCopy(const CBaseNode* pBN) { if (pBN) m_bNoSave = ((CDispNetworkPreferences* )pBN)-&gt;m_bNoSave; }
</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="NetworkPreferencesType">
							<xs:sequence>
								<xs:element name="NetworkAdapter" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation source="ipv6">header_fragment:
	virtual void CustomInit()
	{
		getDhcpV6Preferences()-&gt;setExtRootTagName("DhcpV6Scope");

		getDhcpV6Preferences()-&gt;setDhcpScopeStartIp( QHostAddress(XML_DEFAULT_IP6_ADDRESS) );
		getDhcpV6Preferences()-&gt;setDhcpScopeEndIp( QHostAddress(XML_DEFAULT_IP6_ADDRESS) );
		getDhcpV6Preferences()-&gt;setDhcpScopeMask( QHostAddress(XML_DEFAULT_IP6_MASK) );
	}


	void setDhcpV6Preferences(CDispDhcpPreferences* pDhcp6Scope)
	{
		if (pDhcp6Scope)
			pDhcp6Scope-&gt;setExtRootTagName("DhcpV6Scope");
		setDhcpV6PreferencesOrig(pDhcp6Scope);
	}
	CDispDhcpPreferences* getDhcpV6Preferences() const
	{
		return getDhcpV6PreferencesOrig();
	}
</xs:documentation>
										<xs:documentation source="annot">class=CDispNetAdapter;list=NetAdapters;
</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:sequence>
											<xs:element name="Uuid" type="xs:string">
												<xs:annotation>
													<xs:documentation>method=Uuid;default=Uuid::createUuid().toString();attribute=uuid;</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="Enabled" type="xs:boolean"/>
											<xs:element name="HiddenAdapter" type="xs:boolean" default="true" minOccurs="0">
												<xs:annotation>
													<xs:documentation>TRUE if adapter should be hidden from Mac OS NetworkPrefs</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="EmulatedType" type="xs:integer" default="PNA_HOST_ONLY">
												<xs:annotation>
													<xs:documentation>method=NetworkType;type=PRL_NET_ADAPTER_EMULATED_TYPE;</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="SysName" type="xs:string"/>
											<xs:element name="Name" type="xs:string"/>
											<xs:element name="Index" type="xs:int"/>
											<xs:element name="NatEnabled" type="xs:boolean"/>
											<xs:element name="DhcpScope">
												<xs:annotation>
													<xs:documentation>single_fixed=on;class=CDispDhcpPreferences;include=&lt;QtNetwork&gt;;method=DhcpPreferences;</xs:documentation>
													<xs:documentation source="Tag condition">condition:m_ctEmulatedType != PNA_BRIDGED_ETHERNET</xs:documentation>
												</xs:annotation>
												<xs:complexType>
													<xs:sequence>
														<xs:element name="Enabled" type="xs:boolean"/>
														<xs:element ref="DhcpScopeStartAddress"/>
														<xs:element ref="DhcpScopeEndAddress"/>
														<xs:element ref="DhcpScopeMask"/>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
											<xs:element name="DhcpV6Scope">
												<xs:annotation>
													<xs:documentation>single_fixed=on;class=CDispDhcpPreferences;extern=CDispDhcpPreferences.h;method=DhcpV6PreferencesOrig;</xs:documentation>
													<xs:documentation source="Tag condition">condition:m_ctEmulatedType != PNA_BRIDGED_ETHERNET</xs:documentation>
												</xs:annotation>
												<xs:complexType/>
											</xs:element>
											<xs:element name="PortForwarding">
												<xs:annotation>
													<xs:documentation>single_fixed=on;class=CDispPortForwarding;</xs:documentation>
												</xs:annotation>
												<xs:complexType>
													<xs:sequence>
														<xs:element name="Port" minOccurs="0" maxOccurs="unbounded">
															<xs:annotation>
																<xs:documentation>class=CDispPort;list=Ports;include=&lt;QtNetwork&gt;</xs:documentation>
															</xs:annotation>
															<xs:complexType>
																<xs:sequence>
																	<xs:element name="PortType" type="xs:integer"/>
																	<xs:element name="PortNumIn" type="xs:unsignedShort" default="1"/>
																	<xs:element name="PortNumOut" type="xs:unsignedShort" default="1"/>
																	<xs:element name="IpAddress" type="xs:string" default='QHostAddress("0.0.0.0")'>
																		<xs:annotation>
																			<xs:documentation>type=QHostAddress;</xs:documentation>
																		</xs:annotation>
																	</xs:element>
																</xs:sequence>
															</xs:complexType>
														</xs:element>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="BackupSourcePreferences" type="BackupSourcePreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MountPreferences" type="MountPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FastRebootPreferences" type="FastRebootPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BackupTargetPreferences" type="BackupTargetPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EncryptionPreferences" type="EncryptionPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LockedOperationsList">
				<xs:annotation>
					<xs:documentation>class=CDispLockedOperationsList;single_fixed=on;</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="LockedOperation" type="xs:integer" default="QList&lt;PRL_ALLOWED_VM_COMMAND&gt;()" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>type=PRL_ALLOWED_VM_COMMAND;method=LockedOperations;</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Debug" type="DebugType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LockedSign" type="xs:boolean" default="false" minOccurs="0"/>
			<xs:element name="LogRotatePreferences" type="LogRotatePreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DispToDispPreferences" type="DispToDispPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DispVirtuozzoPreferences" type="DispVirtuozzoPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProblemReportPreferences" type="ProblemReportPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HostMemPressureMonitor" type="HostMemPressureMonitorType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CpuPoolInfo" type="CpuPoolInfoType">
				<xs:annotation>
					<xs:documentation>class=CCpuPoolInfo;extern=XmlModel/CpuFeatures/CCpuPoolInfo.h;single_fixed=on;</xs:documentation>
				</xs:annotation>
				<xs:complexType/>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="CompressionLevel" type="xs:integer"/>
	<xs:complexType name="ConnectionPropertiesType">
		<xs:sequence>
			<xs:element ref="UseSSL"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="HostMemPressureMonitorType">
		<xs:annotation>
			<xs:documentation>class=CHostMemPressureMonitorConfig;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Enable" type="xs:boolean" default="true" minOccurs="0"/>
			<xs:element name="InnactiveTmOutMS" type="xs:unsignedInt" default="5000" minOccurs="0"/>
			<xs:element name="SuspectTmOutMS" type="xs:unsignedInt" default="1000" minOccurs="0"/>
			<xs:element name="ReclaimingTmOutMS" type="xs:unsignedInt" default="10000" minOccurs="0"/>
			<xs:element name="IdlePagesReclaimStep" type="xs:unsignedInt" default="8192" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value is in pages. Default is 32mb</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReclaimPeriodMS" type="xs:unsignedInt" default="600000" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DebugType">
		<xs:annotation>
			<xs:documentation>class=CDspDebug;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MonitorCCPath" type="xs:string"/>
			<xs:element name="VtdSetup" type="xs:integer" default="4" minOccurs="0"/>
			<xs:element name="VerboseLogEnabled" type="xs:boolean" default="false" minOccurs="0"/>
			<xs:element name="VerboseLogWasChanged" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>no_save=on</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="DefaultCommandHistorySize" type="xs:integer" default="50"/>
	<xs:element name="DefaultVmCatalogue" type="xs:string"/>
	<xs:element name="DefaultVmDirectory" type="xs:string"/>
	<xs:element name="DhcpScopeEndAddress" type="xs:string" default="QHostAddress(XML_DEFAULT_IP_ADDRESS)">
		<xs:annotation>
			<xs:documentation>method=DhcpScopeEndIp;type=QHostAddress;</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DhcpScopeMask" type="xs:string" default="QHostAddress(XML_DEFAULT_IP_ADDRESS)">
		<xs:annotation>
			<xs:documentation>type=QHostAddress;</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DhcpScopeStartAddress" type="xs:string" default="QHostAddress(XML_DEFAULT_IP_ADDRESS)">
		<xs:annotation>
			<xs:documentation>method=DhcpScopeStartIp;type=QHostAddress;</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="HkCustomKey" type="xs:integer"/>
	<xs:element name="HkUseAlt" type="xs:integer"/>
	<xs:element name="HkUseCtrl" type="xs:integer"/>
	<xs:element name="HkUseCustom" type="xs:integer"/>
	<xs:element name="HkUseShift" type="xs:integer"/>
	<xs:element name="HostRamSize" type="xs:integer"/>
	<xs:complexType name="HotkeyCombinationType">
		<xs:sequence>
			<xs:element ref="HkUseAlt"/>
			<xs:element ref="HkUseCtrl"/>
			<xs:element ref="HkUseShift"/>
			<xs:element ref="HkUseCustom"/>
			<xs:element ref="HkCustomKey"/>
		</xs:sequence>
		<xs:attribute name="action" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:NMTOKEN">
					<xs:enumeration value="0"/>
					<xs:enumeration value="1"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="HotkeysType">
		<xs:sequence>
			<xs:element name="HotkeyCombination" type="HotkeyCombinationType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="InternetExplorerSettingsType">
		<xs:annotation>
			<xs:documentation>class=CDispInternetExplorerSettings;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Enabled" type="xs:boolean"/>
			<xs:element name="UseAutoSettings" type="xs:boolean"/>
			<xs:element name="UseAutoPacScript" type="xs:boolean"/>
			<xs:element name="AutoPacScript" type="xs:string"/>
			<xs:element name="UserSettings" type="UserSettingsType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="IoServerConnectorPort" type="xs:integer"/>
	<xs:complexType name="ProxyPreferencesType">
		<xs:annotation>
			<xs:documentation>single_fixed=on;class=CDispProxyPreferences;include="include="Interfaces/ParallelsNamespace.h";include=&lt;Build/Current-locale.ver&gt;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ProxyEnabled" type="xs:boolean" default="false" minOccurs="0"/>
			<xs:element name="ProxyFlagsMask" type="xs:integer" default="0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>no_save=on</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProxyManagerURL" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="patch on">patch:</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WebPortalDomain" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="patch on">patch:</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccountId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>no_save=on</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Password" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>no_save=on</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConnectionStatus" type="xs:integer" minOccurs="0">
			</xs:element>
			<xs:element name="ErrorCode" type="xs:integer" default="0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>type=qint64;no_save=on</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProxyInternalFlagsMask" type="xs:integer" default="0" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IPhonePreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispIPhonePreferences;include=&lt;SDK/Include/PrlPorts.h&gt;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AllowConnectionsFromIPhone" type="xs:boolean"/>
			<xs:element name="ProxyPort" type="xs:integer" default="PRL_DISPATCHER_LISTEN_PORT + 1"/>
			<xs:element name="CertificateFile" type="xs:string" minOccurs="0"/>
			<xs:element name="KeyFile" type="xs:string" minOccurs="0"/>
			<xs:element name="AllowAllUsersFromHost" type="xs:boolean" default="true" minOccurs="0"/>
			<xs:element name="IdleSessionTimeout" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>in seconds</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LockScreenOnDisconnect" type="xs:boolean" minOccurs="0"/>
			<xs:element name="BlockScreenInSession" type="xs:boolean" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LimitsType">
		<xs:annotation>
			<xs:documentation>class=CDspLimits;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MaxLogonActions" type="xs:integer" default="16"/>
			<xs:element name="MaxAuthAttemptsPerMinute" type="xs:integer" default="16" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="MaxVmMemory" type="xs:integer"/>
	<xs:complexType name="MemoryPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispMemoryPreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AdjustMemAuto" type="xs:boolean" default="true">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="patch">patch:
	if ( AdjustMemAuto_patch_stamp != "1" )
	{
		setAdjustMemAuto(true);
		AdjustMemAuto_patch_stamp = "1";
	}</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ReservedMemoryLimit"/>
			<xs:element name="ReservedMemoryMin" type="xs:integer" default="XML_DEFAULT_MIN_RESERVED_MEMORY_LIMIT">
				<xs:annotation>
					<xs:documentation>method=MinReservedMemoryLimit;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ReservedMemoryMax"/>
			<xs:element ref="MinVmMemory"/>
			<xs:element ref="MaxVmMemory"/>
			<xs:element ref="RecommendedMaxVmMemory"/>
			<xs:element ref="HostRamSize"/>
			<xs:element name="Overcommit" type="xs:boolean" default="true" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="MinVmMemory" type="xs:integer"/>
	<xs:complexType name="CpuPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispCpuPreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FEATURES_MASK" type="xs:integer" minOccurs="0"/>
			<xs:element name="EXT_FEATURES_MASK" type="xs:integer" minOccurs="0"/>
			<xs:element name="EXT_80000001_ECX_MASK" type="xs:integer" minOccurs="0"/>
			<xs:element name="EXT_80000001_EDX_MASK" type="xs:integer" minOccurs="0"/>
			<xs:element name="EXT_80000007_EDX_MASK" type="xs:integer" minOccurs="0"/>
			<xs:element name="EXT_80000008_EAX" type="xs:integer" minOccurs="0"/>
			<xs:element name="EXT_00000007_EBX_MASK" type="xs:integer" minOccurs="0"/>
			<xs:element name="EXT_0000000D_EAX_MASK" type="xs:integer" minOccurs="0"/>
			<xs:element name="CpuFeaturesMaskValid" type="xs:boolean" default="false" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Name" type="xs:string"/>
	<xs:complexType name="NetworkPreferencesType"/>
	<xs:element name="ParallelsPreferences">
		<xs:annotation>
			<xs:documentation>class=CDispatcherConfig;</xs:documentation>
			<xs:documentation source="Init constructor">header_fragment:
    CDispatcherConfig(QString s) { InitLists(); fromString(s); }</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Version" type="xs:string" minOccurs="0"/>
				<xs:element name="ServerIdentification" type="ServerIdentificationType">
					<xs:annotation>
						<xs:documentation>method=VmServerIdentification;single_fixed=on;</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="License">
					<xs:annotation>
						<xs:documentation>class=CDispLicense;single_fixed=on;</xs:documentation>
						<xs:documentation source="Constructor">header_fragment:
    CDispLicense(const QString&amp; key, const QString&amp; user, const QString&amp; company);</xs:documentation>
						<xs:documentation source="Constructor_impl">unit_fragment:
CDispLicense::CDispLicense(const QString&amp; key, const QString&amp; user, const QString&amp; company)
{
	cleanupClassProperties();

	setKey( key );
	setUser( user );
	setCompany( company );
}
</xs:documentation>
						<xs:documentation source="Tag condition">condition:false</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Key" type="xs:string"/>
							<xs:element name="User" type="xs:string"/>
							<xs:element name="ParsedKey" minOccurs="0">
								<xs:annotation>
									<xs:documentation>class=CDispLicenseParsedKey;
</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence minOccurs="0">
										<xs:element name="Version" type="xs:string" minOccurs="0"/>
										<xs:element name="Edition" type="xs:string" minOccurs="0"/>
										<xs:element name="Product" type="xs:string" minOccurs="0"/>
										<xs:element name="Identity" type="xs:string" minOccurs="0"/>
										<xs:element name="Validity" minOccurs="0">
											<xs:complexType>
												<xs:sequence minOccurs="0">
													<xs:element name="Issued" type="xs:string" minOccurs="0"/>
													<xs:element name="Unit" type="xs:string" minOccurs="0"/>
													<xs:element name="Period" type="xs:string" minOccurs="0"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="Platform" type="xs:string" minOccurs="0"/>
										<xs:element name="Language" type="xs:string" minOccurs="0"/>
										<xs:element name="Distributor" type="xs:string" minOccurs="0"/>
										<xs:element name="CpuLimit" type="xs:string" minOccurs="0"/>
										<xs:element name="MemLimit" type="xs:string" minOccurs="0"/>
										<xs:element name="Type" type="xs:string" minOccurs="0"/>
										<xs:element name="Flags" minOccurs="0">
											<xs:annotation>
												<xs:documentation>class=CLicFlags;</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence minOccurs="0">
													<xs:element name="Value" type="xs:string" minOccurs="0"/>
													<xs:element name="VTd" type="xs:string" minOccurs="0"/>
													<xs:element name="Trial" type="xs:string" minOccurs="0"/>
													<xs:element name="Full" type="xs:string" minOccurs="0"/>
													<xs:element name="NFR" type="xs:string" minOccurs="0"/>
													<xs:element name="Beta" type="xs:string" minOccurs="0"/>
													<xs:element name="Upgrade" type="xs:string" minOccurs="0"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Company" type="xs:string"/>
							<xs:element name="ProductId" type="xs:string" minOccurs="0"/>
							<xs:element name="OfflineExpirationDate" type="xs:dateTime" fixed="read_only_for_merge" minOccurs="0"/>
							<xs:element name="LicenseConfirmed" type="xs:boolean" minOccurs="0"/>
							<xs:element name="ConfirmationDate" type="xs:dateTime" fixed="read_only_for_merge" minOccurs="0"/>
							<xs:element name="LicenseActivationStatus" type="xs:integer" minOccurs="0">
								<xs:annotation>
									<xs:documentation>type=PVE::LicenseActivationStatus;</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="RegistrationStatus" type="xs:int" default="COMMON_NOT_INITIALIZED_INT_VALUE" minOccurs="0"/>
							<xs:element name="RegistrationDate" type="xs:dateTime" fixed="read_only_for_merge" default="QDateTime::fromString(XML_DEFAULT_DATE_TIME, XML_DATETIME_FORMAT)" minOccurs="0"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="ServerSettings" type="ServerSettingsType">
					<xs:annotation>
						<xs:documentation>method=DispatcherSettings;single_fixed=on;</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="schemaVersion" type="xs:decimal" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="ParallelsUserType">
		<xs:annotation>
			<xs:documentation>class=CDispUser;</xs:documentation>
			<xs:documentation source="Init constructor">header_fragment:
    CDispUser(QString s) { InitLists(); fromString(s); }</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>method=UserName;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Uuid" type="xs:string">
				<xs:annotation>
					<xs:documentation>method=UserId;default=Uuid::createUuid().toString();</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessPreferences" type="AccessPreferencesType">
				<xs:annotation>
					<xs:documentation>method=UserAccess;single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserWorkspace" type="UserWorkspaceType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProxySettings" type="ProxySettingsType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserCachedData">
				<xs:annotation>
					<xs:documentation>class=CDispUserCachedData;single_fixed=on;</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Save" type="xs:boolean" default="true" minOccurs="0">
							<xs:annotation>
								<xs:documentation/>
								<xs:documentation source="Condition">condition:false</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="UserCachedPasword" type="UserCachedPaswordType" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>list=UserCachedPaswords;</xs:documentation>
								<xs:documentation source="Condition">condition:isSave()</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ApplianceConfigs">
				<xs:annotation>
					<xs:documentation>class=CDispApplianceConfigs;single_fixed=on;</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ParallelsAppliance" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>class=CAppliance;extern=XmlModel/Appliance/CAppliance.h;list=ApplianceConfigs;</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="external" type="xs:string"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PciPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispPciPreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PrimaryVgaAllowed" type="xs:boolean" default="false" minOccurs="0"/>
			<xs:element name="GenericPciDevices">
				<xs:annotation>
					<xs:documentation>class=CDispGenericPciDevices;single_fixed=on;</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="GenericPciDevice" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>class=CDispGenericPciDevice;list=GenericPciDevices;</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Uuid" type="xs:string">
										<xs:annotation>
											<xs:documentation>method=DeviceId;</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DeviceState" type="xs:integer" default="PGS_CONNECTED_TO_HOST">
										<xs:annotation>
											<xs:documentation>type=PRL_GENERIC_DEVICE_STATE;</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="HookMethod" type="xs:integer" minOccurs="0"/>
									<xs:element name="NativeServiceName" type="xs:string" minOccurs="0"/>
									<xs:element name="NativeDriverName" type="xs:string" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProblemReportPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispProblemReportPreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AllowAttachScreenshots" type="xs:boolean" default="true" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProxySettingsType">
		<xs:annotation>
			<xs:documentation>class=CDispProxySettings;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UseProxy" type="xs:boolean"/>
			<xs:element name="UseAutoPacScript" type="xs:boolean"/>
			<xs:element name="AutoPacScript" type="xs:string"/>
			<xs:element name="SystemSettings" type="InternetExplorerSettingsType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserSettings" type="UserSettingsType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RemoteDisplayPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispRemoteDisplayPreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BasePort" type="xs:integer" default="XML_DEFAULT_REMOTE_DISPLAY_PORT"/>
			<xs:element name="BaseHostName" type="xs:string" default='"0.0.0.0"'/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UsbPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispUsbPreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UsbIdentity" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>class=CDispUsbIdentity;list=AuthenticUsbMap;</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SystemName" type="xs:string"/>
						<xs:element name="FriendlyName" type="xs:string"/>
						<xs:element name="Index" type="xs:integer" default="0"/>
						<xs:element name="UsbType" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>type=PRL_USB_DEVICE_TYPE;default=PUDT_OTHER;</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Association" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>class=CDispUsbAssociation;list=Associations;</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="VmUuid" type="xs:string"/>
									<xs:element name="DirUuid" type="xs:string"/>
									<xs:element name="Action" type="xs:integer" default="PUD_ASK_USER_WHAT_TODO">
										<xs:annotation>
											<xs:documentation>type=PRL_USB_DEVICE_AUTO_CONNECT_OPTION;</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="UsbBlackList" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Contains USB devices with non unique identity.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UsbVirtualDisks">
				<xs:annotation>
					<xs:documentation>single_fixed=on;class=CDispUsbVirtualDisks;</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="FireWire" type="xs:boolean" default="true" minOccurs="0"/>
						<xs:element name="Usb" type="xs:boolean" default="false" minOccurs="0"/>
						<xs:element name="Thunderbolt" type="xs:boolean" default="true" minOccurs="0"/>
						<xs:element name="Removable" type="xs:boolean" default="true" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="RecommendedMaxVmMemory" type="xs:integer"/>
	<xs:element name="ReservedMemoryLimit" type="xs:integer"/>
	<xs:element name="ReservedMemoryMax" type="xs:integer">
		<xs:annotation>
			<xs:documentation>method=MaxReservedMemoryLimit;</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ServerFlagsType">
		<xs:sequence>
			<xs:element name="DiskBlockSize" type="xs:integer" default="8"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ServerIdentificationType">
		<xs:annotation>
			<xs:documentation>class=CVmServerIdentification;extern=XmlModel/VmDirectory/CVmServerIdentification.h;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ServerUuid"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ServerSettingsType">
		<xs:annotation>
			<xs:documentation>class=CDispatcherSettings;</xs:documentation>
			<xs:documentation source="setServerPreferences">header_fragment:
    void setServerPreferences(CDispCommonPreferences* p_options)
        { if ( m_lstCommonPreferences.isEmpty() ) m_lstCommonPreferences += p_options;
        else m_lstCommonPreferences[0] = p_options;
        };
</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CommonPreferences" type="CommonPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UsersPreferences" type="UsersPreferencesType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServerFlags" type="ServerFlagsType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ServerUuid" type="xs:string">
		<xs:annotation>
			<xs:documentation>default=Uuid::createUuid().toString();</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="BackupSourcePreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispBackupSourcePreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DefaultBackupServer" type="xs:string"/>
			<xs:element name="Login" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="condition">condition:isSave()</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Password" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="condition">condition:isSave()</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UsePassword" type="xs:boolean" minOccurs="0"/>
			<xs:element name="PasswordChanged" type="xs:boolean" minOccurs="0"/>
			<xs:element name="Save" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="condition">condition:isSave()</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timeout" type="xs:integer" default="3600" minOccurs="0"/>
			<xs:element name="TmpDir" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MountPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispMountPreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DefaultMountPath" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FastRebootPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispFastRebootPreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FastReboot" type="xs:boolean" default="false" minOccurs="0"/>
			<xs:element name="DefaultPramPath" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BackupTargetPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispBackupTargetPreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DefaultBackupDirectory" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EncryptionPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispEncryptionPreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DefaultPluginId" type="xs:string"/>
			<xs:element name="DefaultPluginIdWasChanged" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>no_save=on</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="UseSSL" type="xs:boolean"/>
	<xs:complexType name="UserCachedPaswordType">
		<xs:annotation>
			<xs:documentation>class=CDispUserCachedPasword;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ProxyServerName" type="xs:string"/>
			<xs:element name="ProxyServerPort" type="xs:integer" minOccurs="0"/>
			<xs:element name="ProxyServerUser" type="xs:string"/>
			<xs:element name="ProxyServerPassword" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="UserVmCatalogue" type="xs:string"/>
	<xs:element name="UserVmDirectory" type="xs:string"/>
	<xs:complexType name="UserWorkspaceType">
		<xs:annotation>
			<xs:documentation>class=CDispUserWorkspace;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UserVmDirectory" type="xs:string">
				<xs:annotation>
					<xs:documentation>method=VmDirectory;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserDefaultVmFolder" type="xs:string">
				<xs:annotation>
					<xs:documentation>method=DefaultVmFolder;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserHomeFolder" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UsersPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispUsersPreferences;</xs:documentation>
			<xs:documentation source="User">header_fragment:
    void addUser(CDispUser* item);
    void removeUser(CDispUser* item);
</xs:documentation>
			<xs:documentation source="User_impl">unit_fragment:
void CDispUsersPreferences::addUser(CDispUser* item)
{
    m_lstDispUsers.append( item );
}

void CDispUsersPreferences::removeUser(CDispUser* item)
{
   m_lstDispUsers.removeAll( item );
}
</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ParallelsUser" type="ParallelsUserType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>list=DispUsers;</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UserSettingsType">
		<xs:annotation>
			<xs:documentation>class=CDispUserSettings;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Enabled" type="xs:boolean"/>
			<xs:element name="HttpSslProxyName" type="xs:string"/>
			<xs:element name="HttpSslProxyPort" type="xs:integer"/>
			<xs:element name="HttpProxyName" type="xs:string"/>
			<xs:element name="HttpProxyPort" type="xs:integer"/>
			<xs:element name="UseCommonSettings" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="condition">condition:isSave()</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EnableHttpAuth" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="condition">condition:isSave()</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EnableHttpsAuth" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="condition">condition:isSave()</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HttpsProxyUser" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="condition">condition:isSave()</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HttpProxyUser" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="condition">condition:isSave()</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HttpsProxyPassword" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="condition">condition:isSave()</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HttpProxyPassword" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="condition">condition:isSave()</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Save" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="condition">condition:isSave()</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Uuid" type="xs:string"/>
	<xs:element name="VmConnectorPort" type="xs:integer"/>
	<xs:element name="WebServicesConnectorPort" type="xs:integer"/>
	<xs:complexType name="WorkspacePreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispWorkspacePreferences;include=&lt;SDK/Include/PrlPorts.h&gt;</xs:documentation>
			<xs:documentation source="Enum SecurityLevel">header_fragment:
    enum SecurityLevel
    {
          LowLevel = 0,
          NormalLevel,
          HighLevel
    };
</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="DefaultVmDirectory"/>
			<xs:element name="DistributedDirectory" type="xs:boolean"/>
			<xs:element name="DefaultUseConsole" type="xs:boolean" default="true"/>
			<xs:element name="DefaultChangeSettings" type="xs:boolean" default="false"/>
			<xs:element name="DispatcherPort" type="xs:integer" default="(PRL_DISPATCHER_LISTEN_PORT)"/>
			<xs:element name="ListenAnyAddr" type="xs:boolean" default="false" minOccurs="0"/>
			<xs:element name="AllowMobileClients" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Need at login</xs:documentation>
					<xs:documentation source="patch mech on">patch:</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AllowDirectMobile" type="xs:boolean" default="(false)" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="patch on">patch:</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AllowMultiplePMC" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:element>
			<xs:element name="MobileAdvancedAuthMode" type="xs:integer" default="PMAA_NO_ADVANCED_AUTH_NEEDED" minOccurs="0">
				<xs:annotation>
					<xs:documentation>type=PRL_MOBILE_ADVANCED_AUTH_MODE;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HostId" type="xs:string" minOccurs="0"/>
			<xs:element ref="DefaultCommandHistorySize"/>
			<xs:element name="MinimalSecurityLevel" type="xs:integer" default="PSL_LOW_SECURITY" minOccurs="0">
				<xs:annotation>
					<xs:documentation>type=PRL_SECURITY_LEVEL;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VmTimeoutOnShutdown" type="xs:integer" default="120" minOccurs="0"/>
			<xs:element name="AllowVmForceShutdown" type="xs:boolean" default="true" minOccurs="0"/>
			<xs:element name="VmUptimeSyncTimeoutInMinutes" type="xs:integer" default="(ParallelsDirs::getAppExecuteMode() == PAM_SERVER ? 15 : 0 )" minOccurs="0"/>
			<xs:element name="AllowUseNetworkShares" type="xs:boolean" minOccurs="0"/>
			<xs:element name="SwapPathForVMOnNetworkShares" type="xs:string" minOccurs="0"/>
			<xs:element name="ClusterModeEnabled" type="xs:boolean" default="false" minOccurs="0"/>
			<xs:element name="VmConfigWatcherEnabled" type="xs:boolean" default="(ParallelsDirs::getAppExecuteMode() == PAM_SERVER ? false: true)" minOccurs="0"/>
			<xs:element name="Limits" type="LimitsType">
				<xs:annotation>
					<xs:documentation>single_fixed=on;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UsbConnectionType" type="xs:integer" default="PUD_ASK_USER_WHAT_TODO" minOccurs="0">
				<xs:annotation>
					<xs:documentation>type=PRL_USB_DEVICE_AUTO_CONNECT_OPTION;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EnableSpokenCommands" type="xs:boolean" default="false" minOccurs="0"/>
			<xs:element name="EnableSendStatisticReport" type="xs:boolean" default="false" minOccurs="0"/>
			<xs:element name="ConfirmationModeByDefault" type="xs:integer" default="PVE::CMV_DEFAULT" minOccurs="0">
				<xs:annotation>
					<xs:documentation>type=PVE::ConfirmationModeValue;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefaultPlainDiskAllowed" type="xs:boolean" default="false" minOccurs="0"/>
			<xs:element name="PluginsAllowed" type="xs:boolean" default="false" minOccurs="0"/>
			<xs:element name="VmConfigCacheEnabled" type="xs:boolean" default="true" minOccurs="0"/>
			<xs:element name="HeadlessModeEnabled" type="xs:boolean" default="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>no_save=on</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpecialOption" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>method=DisableCheckOnlineVolumeLicenseKeys;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpecialOption2" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>method=DisableCheckEtcHosts;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MountNTFSToHostOnConnectionToVm" type="xs:boolean" minOccurs="0"/>
			<xs:element name="VmGuestCollectPeriod" type="xs:integer" default="10" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LogRotatePreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispLogRotatePreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Enabled" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation/>
					<xs:documentation source="patch on">patch:</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompressionEnabled" type="xs:boolean" default="true" minOccurs="0"/>
			<xs:element name="IntervalInMinutes" type="xs:long" default="60"/>
			<xs:element name="SystemLogSettings">
				<xs:annotation>
					<xs:documentation>class=CDispSysLogRotateSettings;single_fixed=on;</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Count" type="xs:integer" default="5"/>
						<xs:element name="SizeInMb" type="xs:integer" default="16"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="VmLogSettings">
				<xs:annotation>
					<xs:documentation>class=CDispVmLogRotateSettings;single_fixed=on;</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Count" type="xs:integer" default="3"/>
						<xs:element name="SizeInMb" type="xs:integer" default="16"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DispToDispPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispToDispPreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ConnectionTimeout" type="xs:integer" default="60" minOccurs="0"/>
			<xs:element name="SendReceiveTimeout" type="xs:integer" default="600" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DispVirtuozzoPreferencesType">
		<xs:annotation>
			<xs:documentation>class=CDispVirtuozzoPreferences;</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DefaultCtDirectory" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
