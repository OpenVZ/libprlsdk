<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="FileSystemInfo">
		<xs:annotation>
			<xs:documentation>class=CHwFileSystemInfo;include="SDK/Include/PrlFs.h";</xs:documentation>
			<xs:documentation source="CHwFileSystemInfo">header_fragment:
    CHwFileSystemInfo(unsigned int fs_genre, CHwFsItem* fs_parent = 0)
    {
        setDefaults();

        setFileSystemGenre(fs_genre);
        setFsParentItem(fs_parent);
    }
</xs:documentation>
			<xs:documentation source="FsParentItem">header_fragment:
    CHwFsItem* getFsParentItem() const
    {
        return getParentElement();
    }
    void setFsParentItem(CHwFsItem* pFsItem)
    {
        if (pFsItem) pFsItem-&gt;setExtRootTagName("ParentElement");
        setParentElement(pFsItem);
    }
</xs:documentation>
			<xs:documentation source="addFileSystemItem">header_fragment:
    void addFileSystemItem(CHwFsItem* pFsItem)
    {
        m_lstFileSystemItems.append(pFsItem);
    }</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Type" type="xs:integer" default="PFS_UNIX_LIKE_FS">
					<xs:annotation>
						<xs:documentation>method=FileSystemGenre;</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="FsType" type="xs:integer" default="PRL_FS_UNSPECIFIED" minOccurs="0">
					<xs:annotation>
						<xs:documentation>method=FileSystemType;type=PRL_FILE_SYSTEM_FS_TYPE;</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="ParentElement" minOccurs="0">
					<xs:annotation>
						<xs:documentation>class=CHwFsItem;extern=CHwFsItem.h;</xs:documentation>
					</xs:annotation>
					<xs:complexType/>
				</xs:element>
				<xs:element name="FsElement" type="FsElementType" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>list=FileSystemItems;</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="FsElementType">
		<xs:annotation>
			<xs:documentation>class=CHwFsItem;</xs:documentation>
			<xs:documentation source="CHwFsItem">header_fragment:
	CHwFsItem( QString name, qint64 size = 0, unsigned int type = PSE_FILE,
		QDateTime modified = QDateTime::currentDateTime(), unsigned int permissions = 0 )
	{
		setName(name);
		setSize(size);
		setType(type);
		setModified(modified);
		setPermissions(permissions);
	};
</xs:documentation>
			<xs:documentation source="Relative name">header_fragment:
	// get user friendly absolute partition name
	QString getRelativeName() const {
		QFileInfo info(getName());
		return info.fileName();
	}
</xs:documentation>
			<xs:documentation source="Dir">header_fragment:
	// is file system item is directory
	bool isDir() const {
		return (getType() == PSE_DIRECTORY) ? true : false;
	};
</xs:documentation>
			<xs:documentation source="File">header_fragment:
	// is file system item is directory
	bool isFile() const {
		return (getType() == PSE_FILE) ? true : false;
	};
</xs:documentation>
			<xs:documentation source="Drive">header_fragment:
	// is file system item a drive
	bool isDrive() const {
		return (getType() == PSE_DRIVE) ? true : false;
	};
</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Type" type="xs:integer" default="PSE_FILE"/>
			<xs:element name="Name" type="xs:string"/>
			<xs:element name="Size" type="xs:long">
				<xs:annotation>
					<xs:documentation>type=qint64;</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Modified" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>default=QDateTime::currentDateTime();</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Permissions" type="xs:integer"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
